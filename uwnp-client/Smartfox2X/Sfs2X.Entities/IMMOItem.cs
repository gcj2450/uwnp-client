using System.Collections.Generic;
using Sfs2X.Entities.Data;
using Sfs2X.Entities.Variables;

namespace Sfs2X.Entities
{
	/// <summary>
	/// The IMMOItem interface defines all the methods and properties that an object representing a SmartFoxServer MMOItem entity exposes.
	/// </summary>
	///
	/// <remarks>
	/// In the SmartFoxServer 2X client API this interface is implemented by the <see cref="T:Sfs2X.Entities.MMOItem" /> class. Read the class description for additional informations.
	/// </remarks>
	///
	/// <seealso cref="T:Sfs2X.Entities.MMOItem" />
	public interface IMMOItem
	{
		/// <summary>
		/// Indicates the id of this item.
		/// </summary>
		///
		/// <remarks>
		/// The id is unique and it is generated by the server when the item is created.
		/// </remarks>
		int Id { get; }

		/// <summary>
		/// Returns the entry point of this item in the current user's AoI.
		/// </summary>
		///
		/// <remarks>
		/// The returned coordinates are those that the item had when its presence in the current user's Area of Interest was last notified by a <see cref="F:Sfs2X.Core.SFSEvent.PROXIMITY_LIST_UPDATE">PROXIMITY_LIST_UPDATE</see> event.
		/// This field is populated only if the MMORoom in which the item exists is configured to receive such data.
		/// </remarks>
		///
		/// <seealso cref="P:Sfs2X.Requests.MMO.MMORoomSettings.SendAOIEntryPoint" />
		/// <seealso cref="F:Sfs2X.Core.SFSEvent.PROXIMITY_LIST_UPDATE" />
		Vec3D AOIEntryPoint { get; set; }

		/// <summary>
		/// Retrieves all the MMOItem Variables of this item.
		/// </summary>
		///
		/// <returns>A list of objects representing the MMOItem Variables associated to this item.</returns>
		List<IMMOItemVariable> GetVariables();

		/// <summary>
		/// Retrieves an MMOItem Variable from its name.
		/// </summary>
		///
		/// <param name="name">The name of the MMOItem Variable to be retrieved.</param>
		///
		/// <returns> The object representing the MMOItem Variable, or <c>null</c> if no MMOItem Variable with the passed name is associated to this item.</returns>
		IMMOItemVariable GetVariable(string name);

		/// <exclude />
		void SetVariable(IMMOItemVariable variable);

		/// <exclude />
		void SetVariables(List<IMMOItemVariable> variables);

		/// <summary>
		/// Indicates whether this item has the specified MMOItem Variable set or not.
		/// </summary>
		///
		/// <param name="name"> The name of the MMOItem Variable whose existance must be checked.</param>
		///
		/// <returns><c>true</c> if a MMOItem Variable with the passed name is set for this item.</returns>
		///
		/// <seealso cref="T:Sfs2X.Entities.Variables.MMOItemVariable" />
		bool ContainsVariable(string name);
	}
}
